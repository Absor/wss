<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/security 
                            http://www.springframework.org/schema/security/spring-security.xsd">
   
    <sec:http entry-point-ref="loginUrlAuthenticationEntryPoint" auto-config="false" use-expressions="true">
        <!-- Path access -->
        <!-- public -->
        <sec:intercept-url pattern="/index.html" access="permitAll" />
        <sec:intercept-url pattern="/resources/**" access="permitAll" />
        <sec:intercept-url pattern="/login" access="permitAll" />
        <sec:intercept-url pattern="/logout" access="permitAll" />
        <sec:intercept-url pattern="/wss/users/loggedin" access="permitAll" />
        <!-- these are secured on method level -->
        <sec:intercept-url pattern="/wss/shifts/**" access="permitAll" />
        <sec:intercept-url pattern="/wss/plannedshifts/**" access="permitAll" />
        <!-- for authenticated users only -->
        <sec:intercept-url pattern="/wss/users/**" access="hasRole('employer')" />
        <!-- deny all rest -->
        <sec:intercept-url pattern="/**" access="denyAll" />
        
        <sec:access-denied-handler error-page="/denied" />
        <sec:logout invalidate-session="true" logout-url="/logout" success-handler-ref="logoutSuccessHandler" />
        <sec:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>
    </sec:http>

    <!-- Custom AJAX authentication config -->
    <bean id="logoutSuccessHandler" class="ht.haapala.wss.authentication.AjaxLogoutSuccessHandler">
        <property name="defaultTargetUrl" value="/"/>
    </bean>
    
    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="filterProcessesUrl" value="/login" />
        <property name="authenticationFailureHandler" ref="securityLoginFailureHandler" />
        <property name="authenticationSuccessHandler" ref="securityLoginSuccessHandler" />
    </bean>
    
    <bean id="securityLoginSuccessHandler" class="ht.haapala.wss.authentication.AjaxAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/"/>
    </bean>

    <bean id="securityLoginFailureHandler" class="ht.haapala.wss.authentication.AjaxAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/"/>
    </bean>

    <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/"/>
    </bean>    
    
    <!-- Password encoder to use -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider>
            <!-- Database authentication manager -->
            <sec:jdbc-user-service data-source-ref="dataSource"
                                   users-by-username-query="SELECT Username, Password, Enabled FROM WSSUser WHERE Username = ?" 
                                   authorities-by-username-query="SELECT Username, UserRole FROM WSSUser WHERE Username = ?"/>
            <sec:password-encoder ref="passwordEncoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>